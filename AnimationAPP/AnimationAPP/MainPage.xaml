<Page
    x:Class="AnimationAPP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AnimationAPP"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <Style TargetType="Rectangle" >
            <Setter Property="Fill" Value="Red"/>
        </Style>
    </Page.Resources>
    <!--这个例子展示了点击后替换随机颜色控件-->
    <!--ContentTheme
                    <Rectangle.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Fill" Value="Orange"/>
                    </Style>
                    </Rectangle.Resources>
    -->
    <Grid>
        <ContentControl x:Name="ContentHost" PointerPressed="ContentHost_PointerPressed">
            <ContentControl.ContentTransitions>
                <TransitionCollection>
                    <ContentThemeTransition/>
                </TransitionCollection>
            </ContentControl.ContentTransitions>
            <Rectangle Height="200" Width="200" Style="{StaticResource test}">
            </Rectangle>
        </ContentControl>
        <!--这个例子展示了如何在导航期间在两个页面之间动画图像。-->
        <Image x:Name="SourceImage"
               Width="200"
               Height="200"
               Stretch="Fill"
               Source="Assets/Storelogo.png"/>
        <Button x:Name="btn" Width="100" Height="100" Content="button"
                Click="Btn_Click"/>
        <!--NavigationTheme-->
        <Frame>
            <Frame.ContentTransitions>
                <TransitionCollection>
                    <NavigationThemeTransition/>
                </TransitionCollection>
            </Frame.ContentTransitions>
        </Frame>
        <!--像这样的主题动画可以使用像这样的默认行为这个例子或者你可以使用属性，
        比如BeginTime和调整动画发生的时间和速度的持续时间。
        如果你想要更多的控制淡入动画(例如，只是局部的)，
        你将需要使用双重动画动画的不透明度要淡入或淡出的元素的属性。-->
        <!--FadeOut,FadeIn-->
        <StackPanel>
            <StackPanel.Resources>
                <Storyboard x:Name="EnterStoryboard">
                    <FadeOutThemeAnimation Storyboard.TargetName="myrectangle" />
                </Storyboard>
                <Storyboard x:Name="ExitStoryboard">
                    <FadeInThemeAnimation Storyboard.TargetName="myrectangle" />
                </Storyboard>
            </StackPanel.Resources>
            <Rectangle x:Name="myrectangle"
                   PointerEntered="Myrectangle_PointerEntered"
                   PointerExited="Myrectangle_PointerExited"
                   Fill="Blue" Width="200" Height="300" HorizontalAlignment="Stretch" Margin="650,0,650,0" VerticalAlignment="Stretch"/>
        </StackPanel>
        <!--RepositionThemeAnimation重定位动画-->
        <StackPanel>
            <StackPanel.Resources>
                <Storyboard x:Name="PointerReleasedStoryBoard">
                    <RepositionThemeAnimation 
                        Storyboard.TargetName="myRectangle"
                        FromHorizontalOffset="-400"/>
                </Storyboard>
            </StackPanel.Resources>
            <Rectangle x:Name="myRectangle"
                       HorizontalAlignment="Left"
                       Width="200"
                       Height="200"
                       Fill="Yellow"
                       PointerReleased="MyRectangle_PointerReleased"/>
        </StackPanel> 
        <!--ReprderThemeAnimation-->
        <StackPanel>
            <Button x:Name="AddItemButton" Content="AddItem" Click="AddItemButton_Click"/>
            <ItemsControl x:Name="ItemsList">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapGrid>
                            <WrapGrid.ChildrenTransitions>
                                <!-- Apply a ReorderThemeTransition that will run when child elements are reordered. -->
                                <TransitionCollection>
                                    <ReorderThemeTransition/>
                                </TransitionCollection>
                            </WrapGrid.ChildrenTransitions>
                        </WrapGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <!-- Initial items. -->
                <Rectangle Width="100" Height="100" Fill="Red"/>
                <Rectangle Width="100" Height="100" Fill="Green"/>
                <Rectangle Width="100" Height="100" Fill="Blue"/>
            </ItemsControl>
        </StackPanel>
        <Button x:Name="button" Content="4444" HorizontalAlignment="Left" Margin="-1,654,0,0" VerticalAlignment="Top"/>
        <!--使用关键帧动画来通过线性关键帧缩放矩形的呈现高度。 
        其中矩形的高度在前 4 秒内缓慢地以线性方式增长，
        然后在最后一秒迅速增长，
        直至矩形的高度增长至初始高度的两倍。-->
        <StackPanel>
            <StackPanel.Resources>
                <Storyboard x:Name="myStoryboard">
                    <DoubleAnimationUsingKeyFrames
              Storyboard.TargetName="myRectangle"
              Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                        <LinearDoubleKeyFrame Value="1.2" KeyTime="0:0:4"/>
                        <LinearDoubleKeyFrame Value="2" KeyTime="0:0:5"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </StackPanel.Resources>
        </StackPanel>
        <Button x:Name="btn2" Width="100" Height="100" Content="sssssssss"
                Click="Btn2_Click" HorizontalAlignment="Left" Margin="0,764,0,0" VerticalAlignment="Top"/>
    </Grid>
</Page>
